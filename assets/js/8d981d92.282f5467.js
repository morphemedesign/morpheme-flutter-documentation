"use strict";(self.webpackChunkmorpheme_flutter_documentation=self.webpackChunkmorpheme_flutter_documentation||[]).push([[5631],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(n),g=r,m=c["".concat(l,".").concat(g)]||c[g]||d[g]||a;return n?o.createElement(m,i(i({ref:t},p),{},{components:n})):o.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:r,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},6329:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:9},i="Routes",s={unversionedId:"starter_kit/routes",id:"starter_kit/routes",title:"Routes",description:"Routes we recommend use GoRouter to easy navigation, deeplink and well maintained.",source:"@site/docs/starter_kit/routes.md",sourceDirName:"starter_kit",slug:"/starter_kit/routes",permalink:"/morpheme-flutter-documentation/docs/starter_kit/routes",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"mySidebars",previous:{title:"Internationalization",permalink:"/morpheme-flutter-documentation/docs/starter_kit/internationalization"},next:{title:"Service Locator",permalink:"/morpheme-flutter-documentation/docs/starter_kit/service_locator"}},l={},u=[{value:"Setup",id:"setup",level:2},{value:"How to Navigate",id:"how-to-navigate",level:2}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"routes"},"Routes"),(0,r.kt)("p",null,"Routes we recommend use ",(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/go_router"},"GoRouter")," to easy navigation, deeplink and well maintained."),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("p",null,"Routes in Morpheme you can find it in two files"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"lib/routes/routes.dart")),(0,r.kt)("p",{parentName:"li"},"Structure in this file ",(0,r.kt)("inlineCode",{parentName:"p"},"Routes")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"abstract class Routes {\n    static GoRouter router = GoRouter(\n        navigatorKey: rootNavigatorKey,\n        debugLogDiagnostics: kDebugMode,\n        initialLocation: joinRoutes([MorphemeRoutes.splash]),\n        routes: [\n          GoRoute(\n             path: joinRoutes([MorphemeRoutes.splash]),\n             builder: (context, state) => const SplashPage(),\n           ),\n          GoRoute(\n            path: joinRoutes([MorphemeRoutes.onboarding]),\n            builder: (context, state) => const OnboardingPage(),\n          ),\n          GoRoute(\n            path: joinRoutes([MorphemeRoutes.login]),\n            builder: (context, state) => const LoginPage(),\n            routes: [\n              GoRoute(\n                path: MorphemeRoutes.register,\n                builder: (context, state) => const RegisterPage(),\n              ),\n              GoRoute(\n                path: MorphemeRoutes.forgotPassword,\n                builder: (context, state) => const ForgotPasswordPage(),\n              ),\n            ],\n          ),\n          StatefulShellRoute.indexedStack(\n              builder: (context, state, navigationShell) =>\n                  MainPage(navigationShell: navigationShell),\n              branches: [\n                ...homeRoutes,\n                ...newsRoutes,\n                ...profileRoutes,\n              ],\n            ),\n          ],\n    );\n}\n")),(0,r.kt)("p",{parentName:"li"},"Register ",(0,r.kt)("inlineCode",{parentName:"p"},"GoRouter")," in service locator ",(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/get_it"},"get_it")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-dart",metastring:'title="lib/locator.dart"',title:'"lib/locator.dart"'},"void setupLocator() {\n    locator.registerLazySingleton(() => Routes.router); // add this\n    setupLocatorFeatureCore();\n    setupLocatorFeatureAuth();\n    setupLocatorFeatureOnboarding();\n    setupLocatorFeatureHome();\n    setupLocatorFeatureNews();\n    setupLocatorFeatureProfile();\n    setupLocatorFeatureSelling();\n}\n")),(0,r.kt)("p",{parentName:"li"},"And then setup router in ",(0,r.kt)("inlineCode",{parentName:"p"},"MaterialApp.router")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-dart",metastring:'title="lib/main.dart"',title:'"lib/main.dart"'},"class MyApp extends StatelessWidget {\n\nconst MyApp({super.key});\n    @override\n    Widget build(BuildContext context) {\n        final router = locator<GoRouter>();\n\n        return BlocProvider(\n        create: (context) => GlobalCubit(),\n            child: Builder(builder: (context) {\n                return MaterialApp.router(\n                title: 'Morpheme',\n                scaffoldMessengerKey: scaffoldMessengerKey,\n                theme: context.selectedTheme.themeData,\n                darkTheme: context.selectedTheme.themeData,\n                locale: context.selectedLocale,\n                localizationsDelegates: S.localizationsDelegates,\n                supportedLocales: S.supportedLocales,\n                routerConfig: router, // add this\n                );\n            }),\n        );\n    }\n}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"core/lib/src/constants/src/morpheme_routes.dart")),(0,r.kt)("p",{parentName:"li"},"In this file we separate 3 part"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Constants path name class ",(0,r.kt)("inlineCode",{parentName:"p"},"MorphemeRoutes")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"abstract final class MorphemeRoutes {        \n  static const String splash = '/';\n  static const String onboarding = 'onboarding';\n  static const String login = 'login';\n  static const String register = 'register';\n  static const String forgotPassword = 'forgot-password';\n\n  static const String main = 'main';\n  static const String home = 'home';\n  static const String news = 'news';\n  static const String profile = 'profile';\n\n  static const String selling = 'selling';\n}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Path for routes ",(0,r.kt)("inlineCode",{parentName:"p"},"PathRoutes")),(0,r.kt)("p",{parentName:"li"},"in PathRoutes we have 2 way to set path"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"use ",(0,r.kt)("inlineCode",{parentName:"li"},"joinRoutes")," this is static way to join path (e.g joinRoutes(","['auth', 'login']",") than result '/auth/login')"),(0,r.kt)("li",{parentName:"ol"},"use ",(0,r.kt)("inlineCode",{parentName:"li"},"dynamicRoutes")," this dynamic way to define path (e.g last route is '/auth' now you add dynamicRoutes('login') than result is '/auth/login')")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"abstract final class PathRoutes {\n  static String get onboarding => joinRoutes([MorphemeRoutes.onboarding]);\n\n  static String get login => joinRoutes([MorphemeRoutes.login]);\n  static String get register => dynamicRoutes(MorphemeRoutes.register);\n  static String get forgotPassword =>\n      dynamicRoutes(MorphemeRoutes.forgotPassword);\n\n  static String get home => joinRoutes([MorphemeRoutes.home]);\n  static String get news => joinRoutes([MorphemeRoutes.news]);\n  static String get profile => joinRoutes([MorphemeRoutes.profile]);\n\n  static String get selling => dynamicRoutes(MorphemeRoutes.selling);\n}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Extension om ",(0,r.kt)("inlineCode",{parentName:"p"},"BuildContext")," for easy use later in ",(0,r.kt)("inlineCode",{parentName:"p"},"MorphemeRoutesContextExtension")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"extension MorphemeRoutesContextExtension on BuildContext {\n  void goToOnboading() => go(PathRoutes.onboarding);\n  void goToLogin() => go(PathRoutes.login);\n  void goToRegister() => go(PathRoutes.register);\n  void goToForgotPassword() => go(PathRoutes.forgotPassword);\n\n  void goToHome() => go(PathRoutes.home);\n  void goToNews() => go(PathRoutes.news);\n  void goToProfile() => go(PathRoutes.profile);\n\n  void goToSelling({\n    required Function(dynamic result) onReturn,\n  }) =>\n      goWithResult(PathRoutes.selling, onReturn: onReturn);\n}\n")))))),(0,r.kt)("h2",{id:"how-to-navigate"},"How to Navigate"),(0,r.kt)("p",null,"To use navigate if you already done to define then call from extension ",(0,r.kt)("inlineCode",{parentName:"p"},"BuildContext"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"InkWell(\n    onTap: () => context.goToLogin();\n    child: Text('Login'),\n),\n")))}c.isMDXComponent=!0}}]);