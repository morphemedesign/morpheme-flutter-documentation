"use strict";(self.webpackChunkmorpheme_flutter_documentation=self.webpackChunkmorpheme_flutter_documentation||[]).push([[2813],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),m=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=m(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=m(n),u=o,f=c["".concat(p,".").concat(u)]||c[u]||d[u]||a;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var m=2;m<a;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2055:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:6},i="Endpoint",l={unversionedId:"morpheme_cli/generate/endpoint",id:"morpheme_cli/generate/endpoint",title:"Endpoint",description:"This command is used to generate endpoints in the file core/lib/src/constants/src/morpheme_endpoints.dart based on the endpoints in the file json2dart/json2dart.yaml",source:"@site/docs/morpheme_cli/generate/endpoint.md",sourceDirName:"morpheme_cli/generate",slug:"/morpheme_cli/generate/endpoint",permalink:"/morpheme-flutter-documentation/docs/morpheme_cli/generate/endpoint",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"mySidebars",previous:{title:"Json2Dart",permalink:"/morpheme-flutter-documentation/docs/morpheme_cli/generate/json2dart"},next:{title:"Assets",permalink:"/morpheme-flutter-documentation/docs/morpheme_cli/generate/assets"}},p={},m=[{value:"Options",id:"options",level:2},{value:"Available Options",id:"available-options",level:3}],s={toc:m};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"endpoint"},"Endpoint"),(0,o.kt)("p",null,"This command is used to generate endpoints in the file ",(0,o.kt)("inlineCode",{parentName:"p"},"core/lib/src/constants/src/morpheme_endpoints.dart")," based on the endpoints in the file ",(0,o.kt)("inlineCode",{parentName:"p"},"json2dart/json2dart.yaml")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"morpheme endpoint\n")),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"morpheme endpoint [arguments]\n")),(0,o.kt)("p",null,"To see all available options and flags, run ",(0,o.kt)("inlineCode",{parentName:"p"},"morpheme endpoint --help"),"."),(0,o.kt)("h3",{id:"available-options"},"Available Options"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Custom Morpheme Yaml :")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Custom Morpheme Yaml"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--morpheme-yaml [path_file]")),(0,o.kt)("td",{parentName:"tr",align:null},"This command is used to select yaml config the application in a specific file, by default it will run the ",(0,o.kt)("inlineCode",{parentName:"td"},"morpheme.yaml")," file.")))))}c.isMDXComponent=!0}}]);