"use strict";(self.webpackChunkmorpheme_flutter_documentation=self.webpackChunkmorpheme_flutter_documentation||[]).push([[7411],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=m(n),s=r,k=c["".concat(p,".").concat(s)]||c[s]||d[s]||l;return n?a.createElement(k,o(o({ref:t},u),{},{components:n})):a.createElement(k,o({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=s;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var m=2;m<l;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},3686:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:11},o="Cucumber",i={unversionedId:"morpheme_cli/project/cucumber",id:"morpheme_cli/project/cucumber",title:"Cucumber",description:"This command to execute integration test just support for implemented dependency Morpheme Cucumber which this package builds on top of patrol and integrationtest to make it easy to integration test with gherkin language. For more info about Morpheme Cucumber you can follow on Documentation.",source:"@site/docs/morpheme_cli/project/cucumber.md",sourceDirName:"morpheme_cli/project",slug:"/morpheme_cli/project/cucumber",permalink:"/morpheme-flutter-documentation/docs/morpheme_cli/project/cucumber",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"mySidebars",previous:{title:"Refactor",permalink:"/morpheme-flutter-documentation/docs/morpheme_cli/project/refactor"},next:{title:"Unused-l10n",permalink:"/morpheme-flutter-documentation/docs/morpheme_cli/project/unused-l10n"}},p={},m=[{value:"Installation",id:"installation",level:2},{value:"How to Run",id:"how-to-run",level:2},{value:"Options",id:"options",level:2},{value:"Available Options",id:"available-options",level:3}],u={toc:m};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cucumber"},"Cucumber"),(0,r.kt)("p",null,"This command to execute integration test just support for implemented dependency ",(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/morpheme_cucumber"},"Morpheme Cucumber")," which this package builds on top of ",(0,r.kt)("inlineCode",{parentName:"p"},"patrol")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"integration_test")," to make it easy to integration test with gherkin language. For more info about Morpheme Cucumber you can follow on ",(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/morpheme_cucumber"},"Documentation"),"."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Requirement"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install ",(0,r.kt)("a",{parentName:"p",href:"https://docs.flutter.dev/get-started/install"},"Flutter")," and another installation e.g Android Studio, Xcode. you can check in this command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"flutter doctor\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"After install Flutter then install morpheme_cli with command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"dart pub global activate morpheme_cli\n")),(0,r.kt)("p",{parentName:"li"},"now you can run this command to check:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"morpheme_cli doctor\n")),(0,r.kt)("p",{parentName:"li"},"If this directory is missing from your PATH, locate the file for your platform and add it."),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Platform"),(0,r.kt)("th",{parentName:"tr",align:null},"Cache location"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"macOS or Linux"),(0,r.kt)("td",{parentName:"tr",align:null},"HOME/.pub-cache/bin")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Windows*"),(0,r.kt)("td",{parentName:"tr",align:null},"%LOCALAPPDATA%\\Pub\\Cache\\bin"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install gherkin executable and make sure to export to your PATH from this ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/morphemedesign/morpheme-flutter-cli/releases/tag/cucumber"},"Gherkin Executable"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install nodejs for generate cucumber json to report html ",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"NodeJs")))),(0,r.kt)("p",null,"Congratulation now you are ready for Instant Integration Test \ud83c\udf89\ud83c\udf89\ud83c\udf89"),(0,r.kt)("h2",{id:"how-to-run"},"How to Run"),(0,r.kt)("p",null,"First connect your device to your machine or open emulator / simulator"),(0,r.kt)("p",null,"Install dependency with command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"morpheme_cli get\n")),(0,r.kt)("p",null,"Once your done installation, then run command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"morpheme_cli cucumber\n")),(0,r.kt)("p",null,"or your need to be specific feature you can do run command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"morpheme_cli cucumber login\n")),(0,r.kt)("p",null,"or multiple"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"morpheme_cli cucumber login,register,home\n")),(0,r.kt)("p",null,"by default run ",(0,r.kt)("inlineCode",{parentName:"p"},"integration_test/cucumber_test.dart")," by flavor dev. if you want to running flavor stag or prod just add argument ",(0,r.kt)("inlineCode",{parentName:"p"},"--flavor stag")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"--flavor prod")),(0,r.kt)("p",null,"example run flavor stag"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"morpheme_cli cucumber --flavor stag\n")),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"morpheme cucumber [arguments]\n")),(0,r.kt)("p",null,"To see all available options and flags, run ",(0,r.kt)("inlineCode",{parentName:"p"},"morpheme cucumber --help"),"."),(0,r.kt)("h3",{id:"available-options"},"Available Options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Custom Morpheme Yaml :")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Custom Morpheme Yaml"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--morpheme-yaml [path_file]")),(0,r.kt)("td",{parentName:"tr",align:null},"This command is used to select yaml config the application in a specific file, by default it will run the ",(0,r.kt)("inlineCode",{parentName:"td"},"morpheme.yaml")," file.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Flavor/Environment :  ")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Flavor/Environment"),(0,r.kt)("th",{parentName:"tr",align:null},"Alternative"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-f dev")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--flavor dev")),(0,r.kt)("td",{parentName:"tr",align:null},"Run project on dev environment (Default)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-f stag")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--flavor stag")),(0,r.kt)("td",{parentName:"tr",align:null},"Run project on staging environment")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-f prod")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--flavor prod")),(0,r.kt)("td",{parentName:"tr",align:null},"Run project on production environment")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Generate l10n :  ")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Generate l10n"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--[no]l10n")),(0,r.kt)("td",{parentName:"tr",align:null},"Generate l10n first before running other command. (defaults to on)"),(0,r.kt)("td",{parentName:"tr",align:null})))))}c.isMDXComponent=!0}}]);