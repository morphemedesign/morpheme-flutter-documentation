"use strict";(self.webpackChunkmorpheme_flutter_documentation=self.webpackChunkmorpheme_flutter_documentation||[]).push([[2560],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(r),d=n,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return r?a.createElement(h,i(i({ref:t},c),{},{components:r})):a.createElement(h,i({ref:t},c))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9772:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:3},i="Concepts",l={unversionedId:"starter_kit/concepts",id:"starter_kit/concepts",title:"Concepts",description:"Morpheme Flutter Starter Kit built with modular to be easy maintained and separate tasking.",source:"@site/docs/starter_kit/concepts.md",sourceDirName:"starter_kit",slug:"/starter_kit/concepts",permalink:"/morpheme-flutter-documentation/docs/starter_kit/concepts",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"mySidebars",previous:{title:"Getting Started",permalink:"/morpheme-flutter-documentation/docs/starter_kit/started"},next:{title:"Environment (morpheme.yaml)",permalink:"/morpheme-flutter-documentation/docs/starter_kit/environment"}},s={},p=[{value:"Tech Stack",id:"tech-stack",level:2},{value:"Folder Structure",id:"folder-structure",level:2},{value:"Config (morpheme.yaml)",id:"config-morphemeyaml",level:2},{value:"Core",id:"core",level:2},{value:"Internationalization",id:"internationalization",level:2},{value:"Pattern",id:"pattern",level:2}],c={toc:p};function m(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"concepts"},"Concepts"),(0,n.kt)("p",null,"Morpheme Flutter Starter Kit built with modular to be easy maintained and separate tasking."),(0,n.kt)("h2",{id:"tech-stack"},"Tech Stack"),(0,n.kt)("p",null,"Morpheme Flutter Starter Kit built using the following major dependencies:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"../morpheme_cli/started"},"Morpheme CLI")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pub.dev/packages/morpheme_base"},"Morpheme Base")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pub.dev/packages/morpheme_http"},"Morpheme HTTP")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pub.dev/packages/morpheme_inspector"},"Morpheme Inspector")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pub.dev/packages/morpheme_extension"},"Morpheme Extension")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pub.dev/packages/google_fonts"},"Google Fonts")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pub.dev/packages/flutter_bloc"},"Flutter Bloc")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pub.dev/packages/go_router"},"Go Router")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pub.dev/packages/get_it"},"Get It")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pub.dev/packages/flutter_secure_storage"},"Flutter Secure Storage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pub.dev/packages/equatable"},"Equatable")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pub.dev/packages/collection"},"Collection")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pub.dev/packages/mocktail"},"Mocktail")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pub.dev/packages/bloc_test"},"Bloc Test"))),(0,n.kt)("h2",{id:"folder-structure"},"Folder Structure"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-console",metastring:'title="Overall Folder Structure"',title:'"Overall',Folder:!0,'Structure"':!0},".\n\u251c\u2500\u2500 android                             # Android native directory\n\u251c\u2500\u2500 assets                              # Module assets\n\u2502   \u251c\u2500\u2500 assets                          # Assets directory\n\u2502   \u251c\u2500\u2500 lib                             # Assets source code directory\n\u251c\u2500\u2500 core                                # Module core\n\u2502   \u251c\u2500\u2500 lib                \n\u2502   \u2502   \u251c\u2500\u2500 src                         \n\u2502   \u2502   \u2502   \u251c\u2500\u2500 components              # Global components\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 constants               # Global constants\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 extensions              # Global extensions\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 firebase                # Firebase helper\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 helper                  # Global helper\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 l10n                    # Localization (generated with morpheme l10n)\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 shared                  # Global shared class\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 test                    # Global helper test\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 themes                  # Global themes style\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 environment.dart        # Environment data from --dart-define\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 global_variable.dart    # Global variable may used in feature module\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 locator.dart            # Service locator core\n\u2502   \u2502   \u251c\u2500\u2500 core_test.dart              # Identity library core test\n\u2502   \u2502   \u251c\u2500\u2500 core.dart                   # Identity library core \n\u2502   \u251c\u2500\u2500 packages                    \n\u2502   \u2502   \u251c\u2500\u2500 dependency_manager          # Module global dependencies\n\u2502   \u2502   \u251c\u2500\u2500 morpheme_library                # Specific dependencies from morpheme_library\n\u2502   \u251c\u2500\u2500 test                            # Core unit test & widget test\n\u251c\u2500\u2500 features                            # Modules feature directory\n\u2502   \u251c\u2500\u2500 auth                            # Auth's modules (example)\n\u2502   \u251c\u2500\u2500 home                            # Home's modules (example)\n\u251c\u2500\u2500 ios                                 # iOS native directory\n\u251c\u2500\u2500 json2dart                           # Json2dart directory\n\u2502   \u251c\u2500\u2500 json                           \n\u2502   \u2502   \u251c\u2500\u2500 body                        # Parameter body api in json\n\u2502   \u2502   \u251c\u2500\u2500 response                    # Response api in json\n\u2502   \u251c\u2500\u2500 json2dart.yaml                  # Main file to control generate json2dart\n\u251c\u2500\u2500 lib       \n\u2502   \u251c\u2500\u2500 main                            \n\u2502   \u2502   \u251c\u2500\u2500 main_page.dart              # Main pages  \n\u2502   \u251c\u2500\u2500 routes                          # Routes with Go Router\n\u2502   \u251c\u2500\u2500 locator.dart                    # Routes with Go Router\n\u2502   \u251c\u2500\u2500 main.dart                       # Service locator main (auto generated)\n\u251c\u2500\u2500 morpheme.yaml                           # Main environtment variable\n\u2514\u2500\u2500 ...\n\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-console",metastring:'title="Feature Folder Structure (Example)"',title:'"Feature',Folder:!0,Structure:!0,'(Example)"':!0},"\u250c\u2500\u2500 ...\n\u251c\u2500\u2500 features                                    # Modules feature directory\n\u2502   \u251c\u2500\u2500 auth                                    # Auth's modules (example)\n\u2502   \u2502   \u251c\u2500\u2500 lib                         \n\u2502   \u2502   \u2502   \u251c\u2500\u2500 login                           # Login's page (example)           \n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 data                        # Data layer   \n\u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 datasources             # Datasource implementation (auto generated)          \n\u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 models                  # Data model body and response (auto generated)   \n\u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 repositories            # Implementation repositories (auto generated)           \n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 domain                      # Domain layer   \n\u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 entities                # Entity take from response (auto generated)\n\u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 repositories            # Contract repositories (auto generated)  \n\u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 usecases                # Usecase implementation (auto generated)\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 presentation                # Presentation layer    \n\u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 bloc                    # Implementation bloc for fetch api (auto generated)\n\u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 cubit                   # Controller with Cubit\n\u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 pages                   # Pages directory\n\u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 widgets                 # Widgets directory for login page\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 locator.dart                # Service locator login page (auto generated)      \n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 mapper.dart                 # Mapper models to entities vice versa (auto generated)    \n\u2502   \u2502   \u2502   \u251c\u2500\u2500 locator.dart                    # Service locator auth (auto generated)  \n\u2502   \u2502   \u251c\u2500\u2500 test                                # Auth's unit test & widget test\n\u2514\u2500\u2500 ...\n\n")),(0,n.kt)("h2",{id:"config-morphemeyaml"},"Config (morpheme.yaml)"),(0,n.kt)("p",null,"Like the .env morpheme.yaml aims to save the config environment will be ignored and keep secret only the team in the project has the right to get the morpheme.yaml."),(0,n.kt)("h2",{id:"core"},"Core"),(0,n.kt)("p",null,"The core module is a reusable code that is used in all features. Core module has additional dependencies on packages:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Dependency Manage : All third party dependency except Morpheme Library"),(0,n.kt)("li",{parentName:"ul"},"Morpheme Library      : Dependency from Morpheme")),(0,n.kt)("h2",{id:"internationalization"},"Internationalization"),(0,n.kt)("p",null,"Internationalization location in ",(0,n.kt)("inlineCode",{parentName:"p"},"assets/assets/l10n")," and will generated to ",(0,n.kt)("inlineCode",{parentName:"p"},"core/lib/src/l10n")," with official tools ",(0,n.kt)("inlineCode",{parentName:"p"},"flutter gen-l10n")," and simplied with Morpheme CLI command ",(0,n.kt)("inlineCode",{parentName:"p"},"morpheme l10n"),". Learn more about Internationalization ",(0,n.kt)("a",{parentName:"p",href:"https://docs.flutter.dev/development/accessibility-and-localization/internationalization"},"here")),(0,n.kt)("h2",{id:"pattern"},"Pattern"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://bloclibrary.dev/#/"},"BLoC Pattern")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html"},"Clean Architecture")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://resocoder.com/category/tutorials/flutter/tdd-clean-architecture/"},"TDD Pattern")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.digitalocean.com/community/conceptual-articles/s-o-l-i-d-the-first-five-principles-of-object-oriented-design"},"Solid Pattern"))))}m.isMDXComponent=!0}}]);