"use strict";(self.webpackChunkmorpheme_flutter_documentation=self.webpackChunkmorpheme_flutter_documentation||[]).push([[1489],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),c=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=c(r),s=n,f=d["".concat(p,".").concat(s)]||d[s]||u[s]||o;return r?a.createElement(f,l(l({ref:t},m),{},{components:r})):a.createElement(f,l({ref:t},m))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=s;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:n,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}s.displayName="MDXCreateElement"},6727:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:10},l="Refactor",i={unversionedId:"morpheme_cli/project/refactor",id:"morpheme_cli/project/refactor",title:"Refactor",description:"This command aim to refactor renaming filename, classname and variable with parameter oldname replace to newname.",source:"@site/docs/morpheme_cli/project/refactor.md",sourceDirName:"morpheme_cli/project",slug:"/morpheme_cli/project/refactor",permalink:"/morpheme-flutter-documentation/docs/morpheme_cli/project/refactor",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"mySidebars",previous:{title:"Upgrade",permalink:"/morpheme-flutter-documentation/docs/morpheme_cli/project/upgrade"},next:{title:"Cucumber",permalink:"/morpheme-flutter-documentation/docs/morpheme_cli/project/cucumber"}},p={},c=[{value:"Options",id:"options",level:2},{value:"Available Options",id:"available-options",level:3}],m={toc:c};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"refactor"},"Refactor"),(0,n.kt)("p",null,"This command aim to refactor renaming filename, classname and variable with parameter oldname replace to newname."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"morpheme refactor --old-name [old-name] --new-name [new-name]\n")),(0,n.kt)("h2",{id:"options"},"Options"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"morpheme refactor --old-name [old-name] --new-name [new-name] [arguments]\n")),(0,n.kt)("p",null,"To see all available options and flags, run ",(0,n.kt)("inlineCode",{parentName:"p"},"morpheme refactor --help"),"."),(0,n.kt)("h3",{id:"available-options"},"Available Options"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Options :")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Options"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"--exclude-changes [code-exclude-changes]")),(0,n.kt)("td",{parentName:"tr",align:null},"Code will exclude to refactor separate with , (coma)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"--exclude-files [path-files]")),(0,n.kt)("td",{parentName:"tr",align:null},"Spesific path file will exclude to refactor both code and filename separate with , (coma)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"--exclude-directories [path-directories]")),(0,n.kt)("td",{parentName:"tr",align:null},"Spesific path directory will exclude to refactor including files and codes in it separate with , (coma)")))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Flags :")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Flags"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"--[no-]include-library")),(0,n.kt)("td",{parentName:"tr",align:null},"Refactor rename ",(0,n.kt)("inlineCode",{parentName:"td"},"morpheme")," name to ",(0,n.kt)("inlineCode",{parentName:"td"},"app name")," include Morpheme Library, by default false")))))}d.isMDXComponent=!0}}]);